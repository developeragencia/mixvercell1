import { useState } from "react";
import { useLocation } from "wouter";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Alert, AlertDescription } from "@/components/ui/alert";
import { AlertCircle, ArrowLeft, Phone } from "lucide-react";
import { useToast } from "@/hooks/use-toast";
import mixLogo from "@assets/Logo_MIX_horizontal_1752607947932.png";

export default function PhoneAuth() {
  const [, setLocation] = useLocation();
  const [phone, setPhone] = useState("");
  const [error, setError] = useState("");
  const [isLoading, setIsLoading] = useState(false);
  const { toast } = useToast();

  const handleContinueWithPhone = async (e: React.FormEvent) => {
    e.preventDefault();
    setIsLoading(true);
    setError("");

    // Validar formato do telefone
    const phoneRegex = /^\(\d{2}\)\s\d{4,5}-\d{4}$/;
    if (!phoneRegex.test(phone)) {
      setError("Formato inválido. Use: (11) 99999-9999");
      setIsLoading(false);
      return;
    }

    try {
      // Aguardar um momento para simular processamento
      await new Promise(resolve => setTimeout(resolve, 800));
      
      toast({
        title: "Telefone salvo!",
        description: "Continue criando seu perfil",
      });
      
      // Continuar diretamente para criação de perfil
      setLocation("/create-profile");
    } catch (err) {
      setError("Erro ao processar telefone");
    } finally {
      setIsLoading(false);
    }
  };

  const formatPhone = (value: string) => {
    // Remove todos os caracteres não numéricos
    const numbers = value.replace(/\D/g, '');
    
    // Aplicar máscara (XX) XXXXX-XXXX
    if (numbers.length <= 2) {
      return numbers;
    } else if (numbers.length <= 7) {
      return `(${numbers.slice(0, 2)}) ${numbers.slice(2)}`;
    } else {
      return `(${numbers.slice(0, 2)}) ${numbers.slice(2, 7)}-${numbers.slice(7, 11)}`;
    }
  };

  const handlePhoneChange = (e: React.ChangeEvent<HTMLInputElement>) => {
    const formatted = formatPhone(e.target.value);
    setPhone(formatted);
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-blue-600 via-blue-700 to-blue-800 flex flex-col items-center justify-center p-6">
      {/* Logo MIX */}
      <div className="mb-8 text-center">
        <div className="mb-4">
          <img src={mixLogo} alt="MIX" className="h-16 mx-auto" />
        </div>
        <h1 className="text-white text-2xl font-bold">Verificação por telefone</h1>
        <p className="text-white/70 text-lg">Conecte-se com segurança</p>
      </div>

      {/* Card branco */}
      <div className="w-full max-w-sm bg-white rounded-xl shadow-xl p-6">
        {/* Header com botão voltar */}
        <div className="flex items-center mb-6">
          <Button
            variant="ghost"
            size="sm"
            onClick={() => setLocation('/cadastre-se-new')}
            className="p-2 hover:bg-gray-100"
          >
            <ArrowLeft className="h-4 w-4" />
          </Button>
          <div className="flex-1 text-center">
            <h2 className="text-2xl font-bold text-gray-800">
              Seu telefone
            </h2>
          </div>
        </div>

        <div className="text-center mb-6">
          <div className="w-16 h-16 mx-auto mb-4 bg-pink-100 rounded-full flex items-center justify-center">
            <Phone className="h-8 w-8 text-pink-600" />
          </div>
          <p className="text-gray-600 text-sm">
            Digite seu número para continuar com o cadastro
          </p>
        </div>

        {error && (
          <Alert variant="destructive" className="mb-4 bg-red-100 border-red-300 text-red-700">
            <AlertCircle className="h-4 w-4" />
            <AlertDescription>{error}</AlertDescription>
          </Alert>
        )}

        <form onSubmit={handleContinueWithPhone} className="space-y-4">
          <div className="space-y-2">
            <label className="text-sm font-medium text-gray-700">
              Número do telefone
            </label>
            <Input
              type="tel"
              placeholder="(11) 99999-9999"
              value={phone}
              onChange={handlePhoneChange}
              className="h-12 text-base border border-gray-300 focus:border-pink-500 rounded-lg px-4"
              maxLength={15}
              required
            />
          </div>

          <Button 
            type="submit"
            className="w-full h-12 bg-gradient-to-r from-pink-500 to-pink-600 hover:from-pink-600 hover:to-pink-700 text-white font-semibold rounded-lg"
            disabled={isLoading || phone.length < 14}
          >
            {isLoading ? "Processando..." : "CONTINUAR"}
          </Button>
        </form>
      </div>
    </div>
  );
}