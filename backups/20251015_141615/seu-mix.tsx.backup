import { useState } from "react";
import { useLocation } from "wouter";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Check, Crown, Heart, Star, X } from "lucide-react";
import BottomNavigation from "@/components/BottomNavigation";
import mixLogo from "@assets/Logo_MIX_horizontal_1750591494976.png";

export default function SeuMix() {
  const [, setLocation] = useLocation();
  const [selectedPlan, setSelectedPlan] = useState<'premium' | 'vip' | null>(null);

  const plans = [
    {
      id: 'premium',
      name: 'Premium',
      price: 'R$ 29,90',
      period: '/mÃªs',
      color: 'from-pink-500 to-purple-600',
      icon: Heart,
      popular: true,
      features: [
        'Likes ilimitados',
        'Ver quem curtiu vocÃª',
        'Rewind (desfazer swipes)',
        'Boost mensal',
        'Sem anÃºncios'
      ]
    },
    {
      id: 'vip',
      name: 'VIP',
      price: 'R$ 49,90',
      period: '/mÃªs',
      color: 'from-yellow-500 to-orange-600',
      icon: Crown,
      popular: false,
      features: [
        'Tudo do Premium',
        'Super Likes ilimitados',
        '5 Boosts por mÃªs',
        'Controle de quem vÃª seu perfil',
        'Viagens: match em qualquer lugar',
        'Leitura de mensagens'
      ]
    }
  ];

  const handleContinue = () => {
    if (selectedPlan) {
      // Redirecionar para pÃ¡gina de pagamento
      setLocation('/payment');
    } else {
      // Continuar grÃ¡tis
      setLocation('/discover');
    }
  };

  const handleSkip = () => {
    // NÃ£o permitir pular se chegou aqui por limite de matches
    setLocation('/discover');
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-900 via-purple-900 to-pink-900 relative overflow-hidden">
      {/* Background pattern */}
      <div className="absolute inset-0 opacity-10">
        <div className="absolute top-10 left-10 w-32 h-32 bg-white rounded-full blur-xl"></div>
        <div className="absolute bottom-20 right-10 w-40 h-40 bg-pink-300 rounded-full blur-xl"></div>
        <div className="absolute top-1/2 left-1/4 w-24 h-24 bg-purple-300 rounded-full blur-xl"></div>
      </div>

      <div className="relative z-10 flex flex-col min-h-screen">
        {/* Header */}
        <header className="flex justify-center items-center p-4">
          <img src={mixLogo} alt="MIX" className="h-8" />
        </header>

        {/* Content */}
        <main className="flex-1 flex flex-col items-center justify-center px-4 pb-4">
          <div className="text-center mb-8">
            <h1 className="text-3xl font-bold text-white mb-2">
              ðŸš« Limite atingido!
            </h1>
            <p className="text-pink-300 text-lg font-semibold mb-2">
              VocÃª usou seus 10 matches gratuitos
            </p>
            <p className="text-white/80 text-base">
              Assine para continuar fazendo novos matches!
            </p>
          </div>

          <div className="w-full max-w-md space-y-4 mb-8">
            {plans.map((plan) => {
              const Icon = plan.icon;
              const isSelected = selectedPlan === plan.id;
              
              return (
                <Card
                  key={plan.id}
                  className={`relative cursor-pointer transition-all duration-200 transform hover:scale-105 ${
                    isSelected 
                      ? 'ring-4 ring-white/50 shadow-2xl' 
                      : 'hover:shadow-xl'
                  }`}
                  onClick={() => setSelectedPlan(plan.id as 'premium' | 'vip')}
                >
                  {plan.popular && (
                    <div className="absolute -top-3 left-1/2 transform -translate-x-1/2 z-10">
                      <div className="bg-gradient-to-r from-pink-500 to-purple-600 text-white px-4 py-1 rounded-full text-sm font-semibold">
                        <Star className="w-4 h-4 inline mr-1" />
                        Mais Popular
                      </div>
                    </div>
                  )}
                  
                  <CardHeader className="pb-4">
                    <div className="flex items-center justify-between">
                      <div className="flex items-center space-x-3">
                        <div className={`w-12 h-12 rounded-full bg-gradient-to-br ${plan.color} flex items-center justify-center`}>
                          <Icon className="w-6 h-6 text-white" />
                        </div>
                        <div>
                          <CardTitle className="text-xl font-bold">{plan.name}</CardTitle>
                          <CardDescription className="text-gray-600">
                            {plan.price}<span className="text-sm">{plan.period}</span>
                          </CardDescription>
                        </div>
                      </div>
                      <div className={`w-6 h-6 rounded-full border-2 flex items-center justify-center ${
                        isSelected 
                          ? 'bg-gradient-to-br from-pink-500 to-purple-600 border-purple-600' 
                          : 'border-gray-300'
                      }`}>
                        {isSelected && <Check className="w-4 h-4 text-white" />}
                      </div>
                    </div>
                  </CardHeader>

                  <CardContent className="pt-0">
                    <ul className="space-y-2">
                      {plan.features.map((feature, index) => (
                        <li key={index} className="flex items-center space-x-2">
                          <Check className="w-4 h-4 text-green-500 flex-shrink-0" />
                          <span className="text-sm text-gray-700">{feature}</span>
                        </li>
                      ))}
                    </ul>
                  </CardContent>
                </Card>
              );
            })}
          </div>

          {/* Free option */}
          <Card 
            className={`w-full max-w-md cursor-pointer transition-all duration-200 ${
              selectedPlan === null 
                ? 'ring-4 ring-white/50 shadow-2xl' 
                : 'hover:shadow-lg'
            }`}
            onClick={() => setSelectedPlan(null)}
          >
            <CardHeader className="pb-2">
              <div className="flex items-center justify-between">
                <div>
                  <CardTitle className="text-lg">Continuar GrÃ¡tis</CardTitle>
                  <CardDescription>Limite de 50 likes por dia</CardDescription>
                </div>
                <div className={`w-6 h-6 rounded-full border-2 flex items-center justify-center ${
                  selectedPlan === null 
                    ? 'bg-gradient-to-br from-pink-500 to-purple-600 border-purple-600' 
                    : 'border-gray-300'
                }`}>
                  {selectedPlan === null && <Check className="w-4 h-4 text-white" />}
                </div>
              </div>
            </CardHeader>
          </Card>

          <div className="w-full max-w-md mt-8">
            <Button
              onClick={handleContinue}
              className="w-full h-14 bg-gradient-to-r from-pink-500 to-purple-600 hover:from-pink-600 hover:to-purple-700 text-white font-semibold text-lg rounded-xl shadow-lg"
            >
              {selectedPlan ? `Assinar ${plans.find(p => p.id === selectedPlan)?.name}` : 'Continuar GrÃ¡tis'}
            </Button>
          </div>
        </main>

        {/* Bottom Navigation */}
        <BottomNavigation />
      </div>
    </div>
  );
}